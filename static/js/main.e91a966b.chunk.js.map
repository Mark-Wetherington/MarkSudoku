{"version":3,"sources":["Components/Game/DifficultySelector.module.css","Components/Game/Game.module.css","Components/Title.module.css","Components/UI/Card.module.css","Components/UI/Button.module.css","Components/Game/Cell.module.css","Components/Title.js","Components/UI/Card.js","Components/UI/Button.js","Components/Game/DifficultySelector.js","Components/Game/Cell.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Title","props","className","styles","title","Card","cardStyle","card","children","Button","buttonStyle","button","onClick","DifficultySelector","DifficultySet","event","onDifficultySelect","target","innerHTML","difficulty","easy","medium","hard","ALLOWED_KEYS","Cell","givenCheck","value","type","name","pattern","maxLength","defaultValue","readOnly","classList","map","thisClass","join","onKeyDown","includes","key","preventDefault","onPaste","e","DIFFICULTY_RATING","Easy","Medium","Hard","Infinity","Game","useState","solution","setSolution","setDifficulty","puzzleJSX","setPuzzleJSX","useEffect","candidatePuzzle","candidateRating","makepuzzle","ratepuzzle","solvepuzzle","x","BuildPuzzle","puzz","JSXAccumulator","puzzleRow","i","length","classes","push","Math","floor","container","board","row","cell","solutionAttempt","document","getElementsByName","toString","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e91a966b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"difficulty\":\"DifficultySelector_difficulty__pVktE\",\"easy\":\"DifficultySelector_easy__3b07R\",\"medium\":\"DifficultySelector_medium__1C5qB\",\"hard\":\"DifficultySelector_hard__21mcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__18aGv\",\"board\":\"Game_board__4BVx3\",\"row\":\"Game_row__aei3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__uIoE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1MXel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__8mrP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2IcuW\",\"given\":\"Cell_given__B8GyM\",\"inner\":\"Cell_inner__1Vcu0\",\"bottom\":\"Cell_bottom__3W8RE\",\"right\":\"Cell_right__1pFqV\",\"block-top\":\"Cell_block-top__1GfIv\",\"block-right\":\"Cell_block-right__QLunp\",\"block-bottom\":\"Cell_block-bottom__3Lvqp\",\"block-left\":\"Cell_block-left__psS7t\"};","import styles from './Title.module.css'\r\n\r\nconst Title = (props) => {\r\n    return <div className={styles.title}>Sudoku</div>\r\n};\r\n\r\nexport default Title;\r\n","import styles from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    const cardStyle = styles.card + ' ' + props.className;\r\n  return <div className={cardStyle}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import styles from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const buttonStyle = styles.button + ' ' + props.className;\r\n  return <button className={buttonStyle} onClick={props.onClick}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport styles from \"./DifficultySelector.module.css\";\r\n\r\nconst DifficultySelector = (props) => {  \r\n  const DifficultySet = (event) => {\r\n    props.onDifficultySelect(event.target.innerHTML);\r\n  }\r\n\r\n  return (\r\n    <Card className={styles.difficulty}>\r\n      <Button className={styles.easy} onClick={DifficultySet}>\r\n        Easy\r\n      </Button>\r\n      <Button className={styles.medium} onClick={DifficultySet}>\r\n        Medium\r\n      </Button>\r\n      <Button className={styles.hard} onClick={DifficultySet}>\r\n        Hard\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifficultySelector;\r\n","import styles from \"./Cell.module.css\";\r\n\r\nconst ALLOWED_KEYS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n\r\nconst Cell = (props) => {\r\n  const givenCheck = props.value ? true : false;\r\n\r\n  const blockInvalid = (event) => {\r\n    if (!ALLOWED_KEYS.includes(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"sudoku-cell\"\r\n      pattern=\"[1-9]\"\r\n      maxLength=\"1\"\r\n      defaultValue={props.value}\r\n      readOnly={givenCheck}\r\n      className={props.classList\r\n        .map((thisClass) => styles[`${thisClass}`])\r\n        .join(\" \")}\r\n      onKeyDown={blockInvalid}\r\n      onPaste={(e) => e.preventDefault()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { makepuzzle, solvepuzzle, ratepuzzle } from \"sudoku\";\r\nimport DifficultySelector from \"./DifficultySelector\";\r\nimport Cell from \"./Cell\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport styles from \"./Game.module.css\";\r\nimport { floor } from \"lodash\";\r\n\r\nconst DIFFICULTY_RATING = {\r\n  Easy: 0.85,\r\n  Medium: 2,\r\n  Hard: Infinity,\r\n};\r\n\r\nconst Game = (props) => {\r\n  const [solution, setSolution] = useState([]);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [puzzleJSX, setPuzzleJSX] = useState([]);\r\n\r\n  const handleSubmit = (event) => {\r\n    let solutionAttempt = document.getElementsByName(\"sudoku-cell\");\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (solution[i].toString() !== solutionAttempt[i].value) {\r\n        console.log(\"Incorrect solution\");\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"Correct solution\");\r\n  };\r\n\r\n  const handleHint = () => {\r\n    let solutionAttempt = document.getElementsByName(\"sudoku-cell\");\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (solutionAttempt[i].value !== solution[i].toString()) {\r\n        solutionAttempt[i].value = solution[i];\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    setDifficulty(\"\");\r\n    setPuzzleJSX([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!difficulty) {\r\n      return;\r\n    }\r\n    let candidatePuzzle = [];\r\n    let candidateRating = 0;\r\n\r\n    do {\r\n      candidatePuzzle = makepuzzle();\r\n      candidateRating = ratepuzzle(candidatePuzzle, 20);\r\n    } while (candidateRating >= DIFFICULTY_RATING[difficulty]);\r\n\r\n    setSolution(solvepuzzle(candidatePuzzle).map((x) => x + 1));\r\n    setPuzzleJSX(BuildPuzzle(candidatePuzzle));\r\n  }, [difficulty]);\r\n\r\n  const BuildPuzzle = (puzz) => {\r\n    let JSXAccumulator = [];\r\n    let puzzleRow = [];\r\n    for (let i = 0; i < puzz.length; i++) {\r\n      let classes = [\"cell\"];\r\n      if (i % 9 === 0 || i % 9 === 3 || i % 9 === 6) {\r\n        classes.push(\"block-left\");\r\n      }\r\n      if (i % 9 === 8) {\r\n        classes.push(\"block-right\");\r\n      }\r\n      if (Math.floor(i / 9) === 0) {\r\n        classes.push(\"block-top\");\r\n      }\r\n      if (Math.floor(i / 9) === 3) {\r\n        classes.push(\"block-top\");\r\n      }\r\n      if (Math.floor(i / 9) === 6) {\r\n        classes.push(\"block-top\");\r\n      }\r\n      if (Math.floor(i / 9) === 8) {\r\n        classes.push(\"block-bottom\");\r\n      }\r\n      if (i % 9 === 8) {\r\n        classes.push(\"block-right\");\r\n      }\r\n      if (puzz[i] === null) {\r\n        puzzleRow.push(<Cell classList={classes} value={\"\"} key={i} />);\r\n      } else {\r\n        classes.push(\"given\");\r\n        puzzleRow.push(\r\n          <Cell classList={classes} value={puzz[i] + 1} key={i} />\r\n        );\r\n      }\r\n      if (puzzleRow.length === 9) {\r\n        JSXAccumulator.push(puzzleRow);\r\n        puzzleRow = [];\r\n      }\r\n    }\r\n    return JSXAccumulator;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!difficulty && <DifficultySelector onDifficultySelect={setDifficulty} />}\r\n      {difficulty && (\r\n        <>\r\n          {\r\n            <div className={styles.container}>\r\n              <Card className={styles.board}>\r\n                {puzzleJSX.map((row, i) => (\r\n                  <div className={styles.row} key={`row-${i}`}>\r\n                    {row.map((cell) => cell)}\r\n                  </div>\r\n                ))}\r\n              </Card>\r\n            </div>\r\n          }\r\n          <Button onClick={handleSubmit}>Submit</Button>\r\n          <Button onClick={handleHint}>Hint</Button>\r\n          <Button onClick={handleReset}>Reset</Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import Title from \"./Components/Title\";\r\nimport Game from \"./Components/Game/Game\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Title />\r\n      <Game />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/* To Do:\r\nAdd block css\r\nMake it look nice\r\nAdd submission and reset modals\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}