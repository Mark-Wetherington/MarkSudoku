{"version":3,"sources":["Components/Game/DifficultySelector.module.css","Components/Game/Game.module.css","Components/Title.module.css","Components/UI/Card.module.css","Components/UI/Button.module.css","Components/Game/Cell.module.css","Components/Title.js","Components/UI/Card.js","Components/UI/Button.js","Components/Game/DifficultySelector.js","Components/Game/Cell.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Title","props","className","styles","title","Card","cardStyle","card","children","Button","buttonStyle","button","onClick","DifficultySelector","DifficultySet","event","onDifficultySelect","target","innerHTML","difficulty","easy","medium","hard","ALLOWED_KEYS","Cell","givenCheck","value","classList","initialValue","push","type","name","pattern","maxLength","defaultValue","readOnly","map","thisClass","join","autoComplete","onKeyDown","includes","key","preventDefault","onPaste","e","onChange","idx","Number","DIFFICULTY_RATING","Easy","Medium","Hard","Infinity","Game","useState","solution","setSolution","setDifficulty","puzzle","setPuzzle","attempt","setAttempt","handleAttempt","newAttempt","useEffect","candidatePuzzle","candidateRating","makepuzzle","ratepuzzle","x","solvepuzzle","container","board","puzz","JSXAccumulator","puzzleRow","i","length","BuildPuzzle","row","cell","solutionAttempt","document","getElementsByName","toString","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5949bf1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"difficulty\":\"DifficultySelector_difficulty__pVktE\",\"easy\":\"DifficultySelector_easy__3b07R\",\"medium\":\"DifficultySelector_medium__1C5qB\",\"hard\":\"DifficultySelector_hard__21mcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__18aGv\",\"board\":\"Game_board__4BVx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__uIoE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1MXel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__8mrP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2IcuW\",\"given\":\"Cell_given__B8GyM\"};","import styles from './Title.module.css'\r\n\r\nconst Title = (props) => {\r\n    return <div className={styles.title}>Sudoku</div>\r\n};\r\n\r\nexport default Title;\r\n","import styles from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    const cardStyle = styles.card + ' ' + props.className;\r\n  return <div className={cardStyle}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import styles from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const buttonStyle = styles.button + ' ' + props.className;\r\n  return <button className={buttonStyle} onClick={props.onClick}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport styles from \"./DifficultySelector.module.css\";\r\n\r\nconst DifficultySelector = (props) => {  \r\n  const DifficultySet = (event) => {\r\n    props.onDifficultySelect(event.target.innerHTML);\r\n  }\r\n\r\n  return (\r\n    <Card className={styles.difficulty}>\r\n      <Button className={styles.easy} onClick={DifficultySet}>\r\n        Easy\r\n      </Button>\r\n      <Button className={styles.medium} onClick={DifficultySet}>\r\n        Medium\r\n      </Button>\r\n      <Button className={styles.hard} onClick={DifficultySet}>\r\n        Hard\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifficultySelector;\r\n","import styles from \"./Cell.module.css\";\r\n\r\nconst ALLOWED_KEYS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n\r\nconst Cell = (props) => {\r\n  const givenCheck = props.value ? true : false;\r\n\r\n  const blockInvalid = (event) => {\r\n    if (!ALLOWED_KEYS.includes(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  let classList = [\"cell\"];\r\n  let initialValue = props.initialValue;\r\n  if (props.initialValue !== null) {\r\n    classList.push(\"given\");\r\n    initialValue++;\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"sudoku-cell\"\r\n      pattern=\"[1-9]\"\r\n      maxLength=\"1\"\r\n      defaultValue={initialValue}\r\n      readOnly={givenCheck}\r\n      className={classList.map((thisClass) => styles[`${thisClass}`]).join(\" \")}\r\n      autoComplete=\"off\"\r\n      onKeyDown={blockInvalid}\r\n      onPaste={(e) => e.preventDefault()}\r\n      onChange={(e) => {\r\n        props.onChange(props.idx, Number(e.target.value));\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { makepuzzle, solvepuzzle, ratepuzzle } from \"sudoku\";\r\nimport DifficultySelector from \"./DifficultySelector\";\r\nimport Cell from \"./Cell\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport styles from \"./Game.module.css\";\r\n\r\nconst DIFFICULTY_RATING = {\r\n  Easy: 0.85,\r\n  Medium: 2,\r\n  Hard: Infinity,\r\n};\r\n\r\nconst Game = (props) => {\r\n  const [solution, setSolution] = useState([]);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [puzzle, setPuzzle] = useState([]);\r\n  const [attempt, setAttempt] = useState([]);\r\n\r\n  const handleSubmit = (event) => {\r\n    let solutionAttempt = document.getElementsByName(\"sudoku-cell\");\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (solution[i].toString() !== solutionAttempt[i].value) {\r\n        alert(\"Incorrect solution\");\r\n        return;\r\n      }\r\n    }\r\n    alert(\"Correct solution\");\r\n  };\r\n\r\n  const handleHint = () => {\r\n    let solutionAttempt = document.getElementsByName(\"sudoku-cell\");\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (solutionAttempt[i].value !== solution[i].toString()) {\r\n        solutionAttempt[i].value = solution[i];\r\n        handleAttempt(i, solution[i]);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    setDifficulty(\"\");\r\n    setPuzzle([]);\r\n  };\r\n\r\n  const handleAttempt = (idx, value) => {\r\n    let newAttempt = [...attempt];\r\n    newAttempt[idx] = value;\r\n    setAttempt(newAttempt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!difficulty) {\r\n      return;\r\n    }\r\n    let candidatePuzzle = [];\r\n    let candidateRating = 0;\r\n    do {\r\n      candidatePuzzle = makepuzzle();\r\n      candidateRating = ratepuzzle(candidatePuzzle, 20);\r\n    } while (candidateRating >= DIFFICULTY_RATING[difficulty]);\r\n\r\n    setAttempt(candidatePuzzle.map((x) => (x !== null ? x + 1 : null)));\r\n    setSolution(solvepuzzle(candidatePuzzle).map((x) => x + 1));\r\n    setPuzzle(candidatePuzzle);\r\n  }, [difficulty]);\r\n\r\n  const BuildPuzzle = (puzz) => {\r\n    let JSXAccumulator = [];\r\n    let puzzleRow = [];\r\n    for (let i = 0; i < puzz.length; i++) {\r\n      puzzleRow.push(\r\n        <Cell key={i} idx={i} initialValue={puzz[i]} onChange={handleAttempt} />\r\n      );\r\n      if (puzzleRow.length === 9) {\r\n        JSXAccumulator.push(puzzleRow);\r\n        puzzleRow = [];\r\n      }\r\n    }\r\n    return JSXAccumulator;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!difficulty && <DifficultySelector onDifficultySelect={setDifficulty} />}\r\n      {difficulty && (\r\n        <>\r\n          {\r\n            <div className={styles.container}>\r\n              <Card className={styles.board}>\r\n                {BuildPuzzle(puzzle).map((row, i) => (\r\n                  <div key={`row-${i}`}>{row.map((cell) => cell)}</div>\r\n                ))}\r\n              </Card>\r\n            </div>\r\n          }\r\n          <Button onClick={handleSubmit}>Submit</Button>\r\n          <Button onClick={handleHint}>Hint</Button>\r\n          <Button onClick={handleReset}>Reset</Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import Title from \"./Components/Title\";\r\nimport Game from \"./Components/Game/Game\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Title />\r\n      <Game />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}