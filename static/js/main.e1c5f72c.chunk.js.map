{"version":3,"sources":["Components/Game/Game.module.css","Components/Game/DifficultySelector.module.css","Components/UI/Modal.module.css","Components/Title.module.css","Components/UI/Card.module.css","Components/UI/Button.module.css","Components/Game/Cell.module.css","App.module.css","Components/Game/Game.js","Components/Title.js","Components/UI/Card.js","Components/UI/Modal.js","Components/UI/Button.js","Components/Game/DifficultySelector.js","Components/Game/Cell.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Title","props","className","styles","title","Card","cardStyle","card","children","ModalContext","createContext","activeModal","setActiveModal","ModalProvider","useState","value","Provider","Modal","modalName","Consumer","ReactDOM","createPortal","backdrop","modal","document","getElementById","Button","buttonStyle","button","onClick","DifficultySelector","DifficultySet","event","onDifficultySelect","target","innerHTML","difficulty","easy","medium","hard","ALLOWED_KEYS","Cell","classList","isGiven","push","type","name","pattern","maxLength","defaultValue","readOnly","map","thisClass","join","autoComplete","onKeyDown","test","key","preventDefault","onPaste","e","onChange","idx","Number","DIFFICULTY_RATING","Easy","Medium","Hard","Infinity","shuffledIndeces","i","m","Math","floor","random","temp","Game","solution","setSolution","setDifficulty","puzzle","setPuzzle","attempt","setAttempt","React","useContext","clearModal","resetPuzzle","handleAttempt","newAttempt","useEffect","candidatePuzzle","candidateRating","makepuzzle","ratepuzzle","x","solvepuzzle","board","puzz","JSXAccumulator","puzzleRow","length","BuildPuzzle","row","cell","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.e1c5f72c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-container\":\"Game_game-container__rooQq\",\"btn-container\":\"Game_btn-container__3D4A9\",\"board\":\"Game_board__4BVx3\",\"game-btn\":\"Game_game-btn__2Ts-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"difficulty\":\"DifficultySelector_difficulty__pVktE\",\"easy\":\"DifficultySelector_easy__3b07R\",\"medium\":\"DifficultySelector_medium__1C5qB\",\"hard\":\"DifficultySelector_hard__21mcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3QG6c\",\"modal\":\"Modal_modal__3w2ET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__uIoE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1MXel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__8mrP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2IcuW\",\"given\":\"Cell_given__B8GyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__oAEx7\"};","import { useState, useEffect } from \"react\";\r\nimport { useModal, Modal } from \"../UI/Modal\";\r\n\r\nimport { makepuzzle, solvepuzzle, ratepuzzle } from \"sudoku\";\r\nimport DifficultySelector from \"./DifficultySelector\";\r\nimport Cell from \"./Cell\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\n//import Modal from \"../UI/Modal\";\r\n\r\nimport styles from \"./Game.module.css\";\r\n\r\nconst DIFFICULTY_RATING = {\r\n  Easy: 0.85,\r\n  Medium: 2,\r\n  Hard: Infinity,\r\n};\r\n\r\nlet shuffledIndeces = [];\r\nfor (let i = 0; i < 81; i++) {\r\n  shuffledIndeces.push(i);\r\n}\r\nfor (let i = 80; i >= 0; i--) {\r\n  let m = Math.floor(Math.random() * i);\r\n  let temp = shuffledIndeces[i];\r\n  shuffledIndeces[i] = shuffledIndeces[m];\r\n  shuffledIndeces[m] = temp;\r\n}\r\n\r\nconst Game = (props) => {\r\n  const [solution, setSolution] = useState([]);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [puzzle, setPuzzle] = useState([]);\r\n  const [attempt, setAttempt] = useState([]);\r\n  const [modalState, setModalState] = useState(null);\r\n  const { activeModal, setActiveModal } = useModal();\r\n\r\n  const handleSubmit = (event) => {\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (solution[i] !== attempt[i]) {\r\n        setActiveModal(\"failure-modal\");\r\n        return;\r\n      }\r\n    }\r\n    setActiveModal(\"success-modal\");\r\n  };\r\n\r\n  const handleHint = () => {\r\n    for (let i = 0; i < solution.length; i++) {\r\n      if (attempt[shuffledIndeces[i]] !== solution[shuffledIndeces[i]]) {\r\n        handleAttempt(shuffledIndeces[i], solution[shuffledIndeces[i]]);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearModal = () => {\r\n    setActiveModal(null);\r\n  };\r\n\r\n  const resetPuzzle = () => {\r\n    clearModal();\r\n    setDifficulty(\"\");\r\n    setPuzzle([]);\r\n  };\r\n\r\n  const handleQuit = (event) => {\r\n    setActiveModal(\"quit-modal\");\r\n  };\r\n\r\n  const handleAttempt = (idx, value) => {\r\n    let newAttempt = [...attempt];\r\n    newAttempt[idx] = value;\r\n    setAttempt(newAttempt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!difficulty) {\r\n      return;\r\n    }\r\n    let candidatePuzzle = [];\r\n    let candidateRating = 0;\r\n    do {\r\n      candidatePuzzle = makepuzzle();\r\n      candidateRating = ratepuzzle(candidatePuzzle, 20);\r\n    } while (candidateRating >= DIFFICULTY_RATING[difficulty]);\r\n\r\n    setAttempt(candidatePuzzle.map((x) => (x !== null ? x + 1 : null)));\r\n    setSolution(solvepuzzle(candidatePuzzle).map((x) => x + 1));\r\n    setPuzzle(candidatePuzzle);\r\n  }, [difficulty]);\r\n\r\n  const BuildPuzzle = (puzz) => {\r\n    let JSXAccumulator = [];\r\n    let puzzleRow = [];\r\n    for (let i = 0; i < puzz.length; i++) {\r\n      let isGiven = puzz[i] !== null;\r\n      puzzleRow.push(\r\n        <Cell\r\n          key={i}\r\n          idx={i}\r\n          value={attempt[i]}\r\n          onChange={handleAttempt}\r\n          isGiven={isGiven}\r\n        />\r\n      );\r\n      if (puzzleRow.length === 9) {\r\n        JSXAccumulator.push(puzzleRow);\r\n        puzzleRow = [];\r\n      }\r\n    }\r\n    return JSXAccumulator;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal modalName=\"success-modal\">\r\n        <div>Correct! You have succesfully completed the puzzle!</div>\r\n        <Button onClick={resetPuzzle}>Main Menu</Button>\r\n      </Modal>\r\n      <Modal modalName=\"failure-modal\">\r\n        <div>Incorrect. Keep trying!</div>\r\n        <Button onClick={clearModal}>Okay</Button>\r\n      </Modal>\r\n      <Modal modalName=\"quit-modal\">\r\n        <div>Are you sure you want to quit?</div>\r\n        <Button onClick={resetPuzzle}>Yes</Button>\r\n        <Button onClick={clearModal}>No</Button>\r\n      </Modal>\r\n      {!difficulty && <DifficultySelector onDifficultySelect={setDifficulty} />}\r\n      {difficulty && (\r\n        <>\r\n          <div className={styles[`game-container`]}>\r\n            <Card className={styles.board}>\r\n              {BuildPuzzle(puzzle).map((row, i) => (\r\n                <div key={`row-${i}`}>{row.map((cell) => cell)}</div>\r\n              ))}\r\n            </Card>\r\n          </div>\r\n          <div className={styles[`btn-container`]}>\r\n            <Button className={styles[`game-btn`]} onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n            <Button className={styles[`game-btn`]} onClick={handleHint}>\r\n              Hint\r\n            </Button>\r\n            <Button className={styles[`game-btn`]} onClick={handleQuit}>\r\n              Quit\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import styles from './Title.module.css'\r\n\r\nconst Title = (props) => {\r\n    return <div className={styles.title}>Sudoku</div>\r\n};\r\n\r\nexport default Title;\r\n","import styles from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    const cardStyle = styles.card + ' ' + props.className;\r\n  return <div className={cardStyle}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Card from \"./Card\";\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst ModalContext = createContext({\r\n  activeModal: null,\r\n  setActiveModal: () => {},\r\n});\r\n\r\nexport const useModal = () => React.useContext(ModalContext);\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const value = { activeModal, setActiveModal };\r\n  return (\r\n    <ModalContext.Provider value={value}>{children}</ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const Modal = ({ modalName, children }) => {\r\n  return (\r\n    <ModalContext.Consumer>\r\n      {({ activeModal }) =>\r\n        activeModal === modalName ? (\r\n          <>\r\n            {ReactDOM.createPortal(\r\n              <div className={styles.backdrop}>\r\n                <Card className={styles.modal}>{children}</Card>\r\n              </div>,\r\n              document.getElementById(\"modal-root\")\r\n            )}\r\n          </>\r\n        ) : null\r\n      }\r\n    </ModalContext.Consumer>\r\n  );\r\n};\r\n","import styles from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const buttonStyle = styles.button + ' ' + props.className;\r\n  return <button className={buttonStyle} onClick={props.onClick}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport styles from \"./DifficultySelector.module.css\";\r\n\r\nconst DifficultySelector = (props) => {  \r\n  const DifficultySet = (event) => {\r\n    props.onDifficultySelect(event.target.innerHTML);\r\n  }\r\n\r\n  return (\r\n    <Card className={styles.difficulty}>\r\n      <Button className={styles.easy} onClick={DifficultySet}>\r\n        Easy\r\n      </Button>\r\n      <Button className={styles.medium} onClick={DifficultySet}>\r\n        Medium\r\n      </Button>\r\n      <Button className={styles.hard} onClick={DifficultySet}>\r\n        Hard\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifficultySelector;\r\n","import styles from \"./Cell.module.css\";\r\n\r\nconst ALLOWED_KEYS = /[1-9]/;\r\n\r\nconst Cell = (props) => {\r\n  const validateInput = (event) => {\r\n    if (!ALLOWED_KEYS.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let classList = [\"cell\"];\r\n  if (props.isGiven) {\r\n    classList.push(\"given\");\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"sudoku-cell\"\r\n      pattern=\"[1-9]\"\r\n      maxLength=\"1\"\r\n      defaultValue={props.value}\r\n      readOnly={props.isGiven}\r\n      className={classList.map((thisClass) => styles[`${thisClass}`]).join(\" \")}\r\n      autoComplete=\"off\"\r\n      onKeyDown={validateInput}\r\n      onPaste={(e) => e.preventDefault()}\r\n      onChange={(e) => {\r\n        props.onChange(props.idx, Number(e.target.value));\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import Title from \"./Components/Title\";\r\nimport Game from \"./Components/Game/Game\";\r\nimport { ModalProvider } from \"./Components/UI/Modal\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Title />\r\n      <ModalProvider>\r\n        <Game />\r\n      </ModalProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}