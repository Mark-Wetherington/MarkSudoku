{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\GitHub\\\\Sudoku\\\\src\\\\Components\\\\Game\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  _s();\n\n  const [totalBoard, setTotalBoard] = useState(null);\n  let tempBoard = [];\n\n  for (let i = 0; i < props.initialBoard.size; i++) {\n    for (let j = 0; j < props.initialBoard.size; j++) {\n      tempBoard = [...tempBoard, {\n        x: '',\n        y: ''\n      }];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.initialBoard.squares.map(cell => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: cell.value\n      }, cell.x.toString() + cell.y.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Board, \"2FUjwhX8IERv3aqV0pz/8ONqbfc=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Mark/Desktop/GitHub/Sudoku/src/Components/Game/Board.js"],"names":["useState","Board","props","totalBoard","setTotalBoard","tempBoard","i","initialBoard","size","j","x","y","squares","map","cell","value","toString"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;AAEA,MAAIK,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,KAAK,CAACK,YAAN,CAAmBC,IAAnC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,KAAK,CAACK,YAAN,CAAmBC,IAAnC,EAAyCC,CAAC,EAA1C,EAA8C;AAC1CJ,MAAAA,SAAS,GAAG,CACR,GAAGA,SADK,EACM;AAACK,QAAAA,CAAC,EAAE,EAAJ;AAAQC,QAAAA,CAAC,EAAE;AAAX,OADN,CAAZ;AAGH;AACF;;AAED,sBACE;AAAA,2BACE;AAAA,gBACGT,KAAK,CAACK,YAAN,CAAmBK,OAAnB,CAA2BC,GAA3B,CAAgCC,IAAD,iBAC9B;AAAA,kBAAiDA,IAAI,CAACC;AAAtD,SAASD,IAAI,CAACJ,CAAL,CAAOM,QAAP,KAAoBF,IAAI,CAACH,CAAL,CAAOK,QAAP,EAA7B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CArBD;;GAAMf,K;;KAAAA,K;AAuBN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Board = (props) => {\r\n  const [totalBoard, setTotalBoard] = useState(null);\r\n\r\n  let tempBoard = [];\r\n  for (let i=0; i<props.initialBoard.size; i++) {\r\n    for (let j=0; j<props.initialBoard.size; j++) {\r\n        tempBoard = [\r\n            ...tempBoard, {x: '', y: ''}\r\n        ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {props.initialBoard.squares.map((cell) => (\r\n          <li key={cell.x.toString() + cell.y.toString()}>{cell.value}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}