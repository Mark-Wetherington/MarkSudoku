{"version":3,"sources":["Components/DifficultySelector.module.css","Components/Title.module.css","Components/UI/Card.module.css","Components/UI/Button.module.css","Components/Title.js","Components/UI/Card.js","Components/UI/Button.js","Components/DifficultySelector.js","Components/Game/Board.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Title","props","className","styles","title","Card","cardStyle","card","children","Button","buttonStyle","button","onClick","DifficultySelector","difficulty","easy","onDifficultySelect","medium","hard","Board","useState","totalBoard","setTotalBoard","useEffect","cellList","givenCell","i","initialData","size","j","squares","x","y","push","value","initialBoard","length","splice","console","log","map","row","cell","toString","Game","setinitialData","a","fetch","then","response","json","data","catch","error","fetchAPI","onReset","App","setDifficulty","event","prevState","target","innerHTML","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5c3abb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"difficulty\":\"DifficultySelector_difficulty__1_ZVH\",\"easy\":\"DifficultySelector_easy__1rg6d\",\"medium\":\"DifficultySelector_medium__2WlmK\",\"hard\":\"DifficultySelector_hard__2ILsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3o3ya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1BIzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__26h7F\"};","import styles from './Title.module.css'\r\n\r\nconst Title = (props) => {\r\n    return <div className={styles.title}>Sudoku</div>\r\n};\r\n\r\nexport default Title;\r\n","import styles from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    const cardStyle = styles.card + ' ' + props.className;\r\n  return <div className={cardStyle}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import styles from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const buttonStyle = styles.button + ' ' + props.className;\r\n  return <button className={buttonStyle} onClick={props.onClick}>{props.children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Card from \"./UI/Card\";\r\nimport Button from \"./UI/Button\";\r\n\r\nimport styles from \"./DifficultySelector.module.css\";\r\n\r\nconst DifficultySelector = (props) => {\r\n  return (\r\n    <Card className={styles.difficulty}>\r\n      <Button className={styles.easy} onClick={props.onDifficultySelect}>\r\n        Easy\r\n      </Button>\r\n      <Button className={styles.medium} onClick={props.onDifficultySelect}>\r\n        Medium\r\n      </Button>\r\n      <Button className={styles.hard} onClick={props.onDifficultySelect}>\r\n        Hard\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifficultySelector;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Board = (props) => {\r\n  const [totalBoard, setTotalBoard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let cellList = [];\r\n    let givenCell = 0;\r\n    for (let i = 0; i < props.initialData.size; i++) {\r\n      for (let j = 0; j < props.initialData.size; j++) {\r\n        if (\r\n          props.initialData.squares[givenCell] &&\r\n          props.initialData.squares[givenCell].x === i &&\r\n          props.initialData.squares[givenCell].y === j\r\n        ) {\r\n          cellList.push(props.initialData.squares[givenCell]);\r\n          givenCell += 1;\r\n        } else {\r\n          cellList.push({ x: i, y: j, value: \"a\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    let initialBoard = [];\r\n    while (cellList.length)\r\n      initialBoard.push(cellList.splice(0, props.initialData.size));\r\n    console.log(initialBoard);\r\n\r\n    setTotalBoard(() => {\r\n      return initialBoard;\r\n    });\r\n  }, [props.initialData]);\r\n\r\n  return (\r\n    <>\r\n      {totalBoard && (\r\n        <table>\r\n          <tbody>\r\n            {totalBoard.map((row) => (\r\n              <tr key={\"row-\" + row[0].x}>\r\n                {row.map((cell) => (\r\n                  <td key={\"cell-\" + cell.x.toString() + cell.y.toString()}>\r\n                    {cell.value}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Board from \"./Board\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Game = (props) => {\r\n  const [initialData, setinitialData] = useState(null);\r\n\r\n  const requestURL = \"new/\";\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      await fetch(requestURL)\r\n        .then((response) => response.json())\r\n        .then((data) =>\r\n          setinitialData(() => {\r\n            //console.log(data);\r\n            return data;\r\n          })\r\n        )\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {initialData && <Board initialData={initialData}></Board>}\r\n      <Button onClick={props.onReset}>Reset</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { useState } from \"react\";\n\nimport Title from \"./Components/Title\";\nimport DifficultySelector from \"./Components/DifficultySelector\";\nimport Game from \"./Components/Game/Game\";\n\nfunction App() {\n  const [difficulty, setDifficulty] = useState('');\n\n  const handleDifficultySelect = (event) => {\n    setDifficulty((prevState, props) => {\n      return event.target.innerHTML;\n    })\n  }\n\n  const handleReset = (event) => {\n    setDifficulty((prevState, props) => {\n      return '';\n    })\n  }\n\n  return (\n    <>\n    <Title />\n    {!difficulty && <DifficultySelector onDifficultySelect={handleDifficultySelect} />}\n    {difficulty && <Game difficulty={difficulty} onReset={handleReset}></Game>}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}